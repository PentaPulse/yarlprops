name: Deploy to Firebase Hosting on merge

on:
  push:
    branches:
      - live

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install root dependencies
        run: npm ci

      - name: Install main-app dependencies
        run: npm ci --prefix main-app

      - name: Install admin-app dependencies
        run: npm ci --prefix admin-app

      - name: Add environment variables
        run: |
          echo "REACT_APP_API_KEY=${{ secrets.REACT_APP_API_KEY }}" >> .env
          echo "REACT_APP_AUTH_DOMAIN=${{ secrets.REACT_APP_AUTH_DOMAIN }}" >> .env
          echo "REACT_APP_PROJECT_ID=${{ secrets.REACT_APP_PROJECT_ID }}" >> .env
          echo "REACT_APP_STORAGE_BUCKET=${{ secrets.REACT_APP_STORAGE_BUCKET }}" >> .env
          echo "REACT_APP_MESSAGE_SENDER_ID=${{ secrets.REACT_APP_MESSAGE_SENDER_ID }}" >> .env
          echo "REACT_APP_APP_ID=${{ secrets.REACT_APP_APP_ID }}" >> .env
          echo "REACT_APP_MEASUREMENT_ID=${{ secrets.REACT_APP_MEASUREMENT_ID }}" >> .env

      - name: Build admin-app
        run: npm run build --prefix admin-app

        env:
          CI: false
      - run: echo "Successfully built admin-app"

      - name: Build main-app
        run: npm run build --prefix main-app
        env:
          CI: false
      - run: echo "Successfully built main-app"

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_YARLPROPS }}
          channelId: live
          projectId: yarlprops
